name: CI/CD with GitHub Actions (Spring Boot + Testcontainers)

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1 Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2 Login no Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # 3 Login GCL
      - name: Authenticate GCL
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS}}]

      # 4 Autenticação do Artifact Registry
      - name: Configure Docker Authentication for GCL Artifacty Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # 5 Setup Java 17
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      # 6 Build e testes (incluindo integração com Testcontainers)
      - name: Build and Run Tests
        run: mvn clean package

      # 7 Docker Compose Build
      - name: Docker Compose Build
        run: docker compose build

      # 8 Push para GCL Registry
      - name: Push to Google Clound Artifact Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:${{ github.run_id }}
          docker push ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:latest
          docker push ${{ secrets.REGISTRY_INFO }}/rest-with-spring-boot-erudio:${{ github.run_id }}

      - name: Push to Docker Hub Container Registry
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}
          docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/rest-with-spring-boot-erudio:${{ github.run_id }}